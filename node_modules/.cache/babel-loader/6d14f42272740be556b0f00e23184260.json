{"ast":null,"code":"var _jsxFileName = \"/Users/jerome/Documents/Github-code/Dojo_React/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst initialProductList = [{\n  id: 1,\n  name: 'produit 1',\n  price: 50,\n  quantity: 1\n}, {\n  id: 2,\n  name: 'produit 2',\n  price: 75,\n  quantity: 2\n}, {\n  id: 3,\n  name: 'produit 3',\n  price: 20,\n  quantity: 5\n}];\n\nfunction App() {\n  const [products, setProducts] = React.useState(initialProductList);\n\n  function handleTotal(event, product) {\n    var newQuantity = parseInt(event.target.value);\n    var newPrice = newQuantity * product.price;\n    debugger;\n    var newProduct = products.map(oldProduct => {\n      if (oldProduct.id === product.id) {\n        return {\n          id: 1,\n          name: 'produit 1',\n          price: newPrice,\n          quantity: newQuantity\n        };\n      } else {\n        return { ...oldProduct\n        };\n      }\n    });\n    setProducts(newProduct);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Ma commande\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Produit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Prix unitaire\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Quantit\\xE9\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Prix total\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, product.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, product.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: product.quantity,\n    type: \"number\",\n    onChange: event => handleTotal(event, product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, product.price))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jerome/Documents/Github-code/Dojo_React/src/App.js"],"names":["React","initialProductList","id","name","price","quantity","App","products","setProducts","useState","handleTotal","event","product","newQuantity","parseInt","target","value","newPrice","newProduct","map","oldProduct"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst initialProductList = [\n  { id: 1, name: 'produit 1', price: 50, quantity: 1 },\n  { id: 2, name: 'produit 2', price: 75, quantity: 2 },\n  { id: 3, name: 'produit 3', price: 20, quantity: 5 }\n];\n\nfunction App () {\n  const [products, setProducts] = React.useState(initialProductList)\n\n  function handleTotal(event, product) {\n    var newQuantity = parseInt(event.target.value)\n    var newPrice    = newQuantity * product.price\n\n    debugger\n\n    var newProduct = products.map((oldProduct) => {\n      if (oldProduct.id === product.id) {\n        return {\n          id: 1,\n          name: 'produit 1',\n          price: newPrice,\n          quantity: newQuantity\n        }\n      } else {\n        return {...oldProduct}\n      }\n    })\n\n    setProducts(newProduct)\n  }\n\n  return (\n    <div className='App'>\n      <h1>Ma commande</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Produit</th>\n            <th>Prix unitaire</th>\n            <th>Quantit√©</th>\n            <th>Prix total</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {products.map(product => (\n            <tr key={product.id}>\n              <td>{product.id}</td>\n              <td>{product.name}</td>\n              <td><input value={product.quantity} type=\"number\" onChange={(event) => handleTotal(event, product)} /></td>\n              <td>{product.price}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}